import os
import pandas as pd
import numpy as np
import gc
import matplotlib.pyplot as plt
import warnings

warnings.filterwarnings('ignore')
folder_path = './数据集/科创企业成长潜力模型/data'  # 替换为你的文件夹路径
excel_files = [file for file in os.listdir(folder_path) if file.endswith('.xlsx') and not file.startswith('~$')  ]
tech_qianli_dict = {}
for file in excel_files:
    df = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{file}', index_col=0)
    tech_qianli_dict[file] = df
#科创
tech_name = [name for name in list(tech_qianli_dict.keys()) if name.startswith('科创属性')]
test_df  = pd.read_csv(r'D:\招行训练营\数据集\科创企业成长潜力模型\upload.csv')
train_label = pd.read_csv(r'D:/招行训练营/数据集/科创企业成长潜力模型/label/train_2.csv')
train_label.rename(columns={'label': 'Y'}, inplace=True)
df = pd.concat((test_df,train_label))
#著作保护
temp_data_1 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[1]}',index_col=0)
features=pd.DataFrame(temp_data_1.groupby('著作权人/企业')['作品名称'].count()).reset_index(drop=False)
features.rename(columns = {'作品名称':'著作保护作品数','著作权人/企业':'ID'},inplace=True)
df =df.merge(features,how ='left',left_on = 'ID',right_on='ID')
features=pd.DataFrame(temp_data_1.groupby('著作权人/企业')['作品类别'].nunique()).reset_index(drop=False)
features.rename(columns = {'作品类别':'著作保护作品类别数','著作权人/企业':'ID'},inplace=True)
#features['企业特色_2'] = '作品著作权企业'
df =df.merge(features,how ='left',left_on = 'ID',right_on='ID')
#df.rename(columns={'企业特色_2': '企业特色'}, inplace=True)
#专利
temp_data_2 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[2]}',index_col=0)
temp_data_3 =  pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[3]}',index_col=0)
important_data = pd.concat((temp_data_2,temp_data_3))
feature_zl = important_data.groupby('专利归属人')['专利名称'].count().reset_index(drop=False)
feature_zl.rename(columns={'专利名称':'专利数'},inplace=True)
feature_zl['专利类别数'] = important_data.groupby('专利归属人')['专利类别'].nunique().values
zl_class = important_data['专利类别'].unique()
zl_class=zl_class[:-1]
for cl in zl_class:
    sub_data = important_data[important_data['专利类别']== cl].groupby('专利归属人')['专利名称'].count().reset_index(drop=False)
    sub_data.rename(columns={'专利名称':f'专利_{cl}_数量'},inplace=True)
    feature_zl = feature_zl.merge(sub_data,how='left',on='专利归属人')
zl_zhuangtai = important_data['专利状态'].unique()
for zhuangtai in zl_zhuangtai:
    sub_data = important_data[important_data['专利状态']== zhuangtai].groupby('专利归属人')['专利名称'].count().reset_index(drop=False)
    sub_data.rename(columns={'专利名称':f'{zhuangtai}_专利_数量'},inplace=True)
    feature_zl = feature_zl.merge(sub_data,how='left',on='专利归属人')
important_data['申请年份'] = important_data['申请公布日'].fillna('')
important_data['申请年份'] = important_data['申请年份'].str.slice(stop=4).replace('', np.nan)
important_data['申请年份'] = important_data['申请年份'].astype(float).astype('Int64')
for year in range(2010,2024):
    sub_data =important_data[important_data['申请年份']==year].groupby('专利归属人')['专利名称'].count().reset_index(drop=False)
    sub_data.rename(columns= {'专利名称':f'{year}年_专利数量'},inplace=True)
    feature_zl = feature_zl.merge(sub_data,how='left',on='专利归属人')
    sub_data =important_data[important_data['申请年份']==year].groupby('专利归属人')['专利类别'].nunique().reset_index(drop=False)
    sub_data.rename(columns= {'专利类别':f'{year}年_专利类别数'},inplace=True)
    feature_zl = feature_zl.merge(sub_data,how='left',on='专利归属人')
    for cl in zl_class:
        sub_data = important_data[(important_data['专利类别']== cl)&(important_data['申请年份']==year)].groupby('专利归属人')['专利名称'].count().reset_index(drop=False)
        sub_data.rename(columns={'专利名称':f'{year}年_专利_{cl}_数量'},inplace=True)
        feature_zl = feature_zl.merge(sub_data,how='left',on='专利归属人')
    for zhuangtai in zl_zhuangtai:
        sub_data = important_data[(important_data['专利状态']== zhuangtai)&(important_data['申请年份']==year)].groupby('专利归属人')['专利名称'].count().reset_index(drop=False)
        sub_data.rename(columns={'专利名称':f'{year}年_{zhuangtai}_专利_数量'},inplace=True)
        feature_zl = feature_zl.merge(sub_data,how='left',on='专利归属人')
    feature_zl.rename(columns={'专利归属人': 'ID'}, inplace=True)
feature_zl.rename(columns={'专利归属人':'ID'},inplace=True)
df = df.merge(feature_zl,how='left',on='ID')
temp_data_4 =  pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[4]}',index_col=0)
temp_data_4['登记年份'] = temp_data_4['登记批准日期'].fillna('')
temp_data_4['登记年份'] = temp_data_4['登记年份'].str.slice(stop=4).replace('', np.nan)
temp_data_4['登记年份'] = temp_data_4['登记年份'].astype(float).astype('Int64')
feature_ruanjian = temp_data_4.groupby('企业名称')['软件名称'].count().reset_index(drop=False)
for year in range(2018,2024):
    sub_data =temp_data_4[temp_data_4['登记年份']==year].groupby('企业名称')['软件名称'].count().reset_index(drop=False)
    sub_data.rename(columns= {'软件名称':f'{year}年_软件数量'},inplace=True)
    feature_ruanjian = feature_ruanjian.merge(sub_data,how='left',on='企业名称')
feature_ruanjian .rename(columns={'企业名称':'ID'},inplace=True)
df = df.merge(feature_ruanjian,how='left',on='ID')
temp_data_5=  pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[5]}',index_col=0)
temp_data_5['公告年份'] = temp_data_5['公告日期'].fillna('')
temp_data_5['公告年份'] = temp_data_5['公告年份'].str.slice(stop=4).replace('', np.nan)
temp_data_5['公告年份'] = temp_data_5['公告年份'].astype(float).astype('Int64')
feature_butu = temp_data_5.groupby('布图设计权利人')['布图设计名称'].count().reset_index(drop=False)
feature_butu.rename(columns={'布图设计名称':'布图设计数量'})
for year in range(2018,2024):
    sub_data =temp_data_5[temp_data_5['公告年份']==year].groupby('布图设计权利人')['布图设计名称'].count().reset_index(drop=False)
    sub_data.rename(columns= {'布图设计名称':f'{year}年_布图设计数量'},inplace=True)
    feature_butu = feature_butu.merge(sub_data,how='left',on='布图设计权利人')
feature_butu .rename(columns={'布图设计权利人':'ID'},inplace=True)
df = df.merge(feature_butu,how='left',on='ID')
#科技申请奖项特征
temp_data_6=  pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[6]}',index_col=0)
temp_data_6.rename(columns={'批准年度':'年度','依托单位':'ID'},inplace=True)
temp_data_7=  pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[7]}',index_col=0)
temp_data_7.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data_6,temp_data_7))
temp_data_8=  pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[8]}',index_col=0)
temp_data_8.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_8))
temp_data_9 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[9]}',index_col=0)
temp_data_9.rename(columns={'企业名称':'ID'},inplace=True)

temp_data = pd.concat((temp_data,temp_data_9))
temp_data_10 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[10]}',index_col=0)
temp_data_10['年度'] = temp_data_10['发布日期'].fillna('')
temp_data_10['年度'] = temp_data_10['年度'].str.slice(stop=4).replace('', np.nan)
temp_data_10['年度'] = temp_data_10['年度'].astype(float).astype('Int64')
temp_data_10.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_10))
temp_data_11 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[11]}',index_col=0)
temp_data_11.rename(columns = {'企业名称':'ID'},inplace = True )
temp_data = pd.concat((temp_data,temp_data_11))
temp_data_12 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[12]}',index_col=0)
temp_data_12.rename(columns={'企业名称':'ID','年份':'年度'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_12))
temp_data_13 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[13]}',index_col=0)
temp_data_13.rename(columns={'企业名称':'ID','年份':'年度'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_13))
temp_data_14  = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[14]}',index_col=0)
temp_data_14.rename(columns={'企业名称':'ID','认定归属年度':'年度'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_14))
temp_data_15= pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[15]}',index_col=0)
temp_data_15.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_15))
temp_data_16 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[16]}',index_col=0)
temp_data_16.rename(columns={'企业名称':'ID','年份':'年度'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_16))
temp_data_17 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[17]}',index_col=0)
temp_data_17.rename(columns={'企业名称':'ID','年份':'年度'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_17))
temp_data_18 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[18]}',index_col=0)
temp_data_18.rename(columns={'企业名称':'ID','年份':'年度'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_18))
temp_data_19 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[19]}',index_col=0)
temp_data_19.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_19))
temp_data_20 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[20]}',index_col=0)
temp_data_20.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_20))
temp_data_21  = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[21]}',index_col=0)
temp_data_21.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_21))
temp_data_22  = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[22]}',index_col=0)
temp_data_22.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_22))
temp_data_23= pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[23]}',index_col=0)
temp_data_23.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_23))
temp_data_24  = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[24]}',index_col=0)
temp_data_24.rename(columns={'企业名称':'ID'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_24))
temp_data_25  = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[25]}',index_col=0)
temp_data_25.rename(columns={'企业名称':'ID','类型':'认定类型'},inplace=True)
temp_data = pd.concat((temp_data,temp_data_25))
temp_data =temp_data[~temp_data['ID'].isnull()]
temp_data = temp_data[['ID','年度','认定类型','级别']
features = temp_data.groupby('ID')['认定类型'].count().reset_index(drop=False)
features.rename(columns= {'认定类型':'科技奖项拼接个数'},inplace=True)
type_class = temp_data['认定类型'].unique()
type_class = type_class[~pd.isna(type_class)]
jibie_class = temp_data['级别'].unique()
jibie_class = jibie_class[~pd.isna(jibie_class)]
for year in range(2018,2024):
    sub_data =temp_data[temp_data['年度']==year].groupby('ID')['认定类型'].count().reset_index(drop=False)
    sub_data.rename(columns= {'认定类型':f'{year}年_科技奖项拼接个数'},inplace=True)
    features = features.merge(sub_data,how='left',on='ID')
    for cl in type_class:
        sub_data = temp_data[(temp_data['认定类型']== cl)&(temp_data ['年度']==year)].groupby('ID')['级别'].count().reset_index(drop=False)
        sub_data.rename(columns={'级别':f'{year}年_科技奖项拼接_{cl}_数量'},inplace=True)
        features = features.merge(sub_data,how='left',on='ID')
    for cl in jibie_class:
        sub_data = temp_data[(temp_data['级别']== cl)&(temp_data['年度']==year)].groupby('ID')['认定类型'].count().reset_index(drop=False)
        sub_data.rename(columns={'认定类型':f'{year}年_科技奖项拼接_{cl}_数量'},inplace=True)
        features = features.merge(sub_data,how='left',on='ID')
#df = df.merge(feature_yanfashili,how='left',on='ID')
df = df.merge(features,how='left',on='ID')
temp_data_7=  pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[7]}',index_col=0)
feature_yanfashili = temp_data_7.groupby('企业名称')['认定类型'].count().reset_index(drop=False)
feature_yanfashili.rename(columns={'认定类型':'申请研发奖项个数'},inplace =True )
for year in range(2018,2024):
    sub_data =temp_data_7[temp_data_7['年度']==year].groupby('企业名称')['认定类型'].count().reset_index(drop=False)
    sub_data.rename(columns= {'认定类型':f'{year}年_申请研发奖项个数'},inplace=True)
    feature_yanfashili = feature_yanfashili.merge(sub_data,how='left',on='企业名称')
feature_yanfashili .rename(columns={'企业名称':'ID'},inplace=True)
df = df.merge(feature_yanfashili,how='left',on='ID')
temp_data_11 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[11]}',index_col=0)
feature_gongyesheji = temp_data_11.groupby('企业名称')['认定类型'].count().reset_index(drop=False)
feature_gongyesheji.rename(columns={'认定类型':'工业设计中心申请奖个数'},inplace =True )
for year in range(2018,2024):
    sub_data =temp_data_11[temp_data_11['年度']==year].groupby('企业名称')['认定类型'].count().reset_index(drop=False)
    sub_data.rename(columns= {'认定类型':f'{year}工业设计中心申请奖个数'},inplace=True)
    feature_gongyesheji = feature_gongyesheji.merge(sub_data,how='left',on='企业名称')
feature_gongyesheji .rename(columns={'企业名称':'ID'},inplace=True)
df = df.merge(feature_gongyesheji,how='left',on='ID')
temp_data_12 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[12]}',index_col=0)
feature_gongchengjishu = temp_data_12.groupby('企业名称')['认定类型'].count().reset_index(drop=False)
feature_gongchengjishu .rename(columns={'认定类型':'工程技术研究中心'},inplace =True )
for year in range(2018,2024):
    sub_data =temp_data_11[temp_data_11['年度']==year].groupby('企业名称')['认定类型'].count().reset_index(drop=False)
    sub_data.rename(columns= {'认定类型':f'{year}工程技术研究中心申请奖个数'},inplace=True)
    feature_gongchengjishu = feature_gongchengjishu.merge(sub_data,how='left',on='企业名称')
feature_gongchengjishu .rename(columns={'企业名称':'ID'},inplace=True)
df = df.merge(feature_gongchengjishu,how='left',on='ID')
tmp_data_21 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{tech_name[21]}',index_col=0)
feature_shehuikeji = tmp_data_21.groupby('企业名称')['项目名称'].count().reset_index(drop=False)
feature_shehuikeji.rename(columns={'项目名称':'社会科技奖个数'},inplace =True )
for year in range(2018,2024):
    sub_data =tmp_data_21[tmp_data_21['年度']==year].groupby('企业名称')['项目名称'].count().reset_index(drop=False)
    sub_data.rename(columns= {'项目名称':f'{year}社会科技奖个数'},inplace=True)
    feature_shehuikeji = feature_shehuikeji.merge(sub_data,how='left',on='企业名称')
feature_shehuikeji .rename(columns={'企业名称':'ID'},inplace=True)
df = df.merge(feature_shehuikeji,how='left',on='ID')
gongshang_data_0 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{gongshang_name[0]}',index_col=0)
gongshang_data_0 = gongshang_data_0[~gongshang_data_0['企业名称'].isnull()]
features = gongshang_data_0.groupby('企业名称')['员工人数'].sum().reset_index(drop=False)
# 定义映射字典
mapping = {'微型': 1, '小型': 2, '中型': 3, '大型': 4, '未获取': 0, np.nan: 0}

# 使用 replace 方法进行映射
gongshang_data_0['企业规模国标'] = gongshang_data_0['企业规模国标'].replace(mapping)
gongshang_data_0 .rename(columns={'企业名称':'ID'},inplace=True)
df = df.merge(gongshang_data_0,how='left',on='ID')
#工商信息+市场认可
gongshang_data_1 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{gongshang_name[1]}',index_col=0)
gongshang_data_1 = gongshang_data_1[~gongshang_data_1['企业名称'].isnull()]
gongshang_data_1.rename(columns = {'企业名称':'ID'},inplace=True)
gongshang_data_1 = gongshang_data_1.merge(df[['ID','Y']],how='left',on='ID')
# 定义要进行target encoding的列名
#cat_cols = ["国际分类名称"]

# 创建target encoder对象，并进行target encoding
#encoder = ce.TargetEncoder(cols=cat_cols)
#encoder.fit(gongshang_data_1[cat_cols], gongshang_data_1["Y"])
#data_encoded = encoder.transform(gongshang_data_1[cat_cols]).add_suffix("_target")
gongshang_data_1['商标申请年份'] = gongshang_data_1['申请日期'].fillna('')
gongshang_data_1['商标申请年份'] = gongshang_data_1['申请日期'].str.slice(stop=4).replace('', np.nan)
gongshang_data_1['商标申请年份']  = gongshang_data_1['商标申请年份'].astype(float).astype('Int64')
features = gongshang_data_1.groupby('ID')['初审公告期号'].count().reset_index(drop=False)
features.rename(columns = {'初审公告期号':'商标个数'},inplace=True)
features['国际分类名称_targetencoder_mean']=gongshang_data_1.groupby("ID")['国际分类名称_target'].mean().values
features['国际分类名称_targetencoder_std']=gongshang_data_1.groupby("ID")['国际分类名称_target'].std().values
shangbiao_zhuangtai = gongshang_data_1['商标状态'].unique()
for year in range(2010,2024):
    sub_data =gongshang_data_1[gongshang_data_1['商标申请年份']==year].groupby('ID')['初审公告期号'].count().reset_index(drop=False)
    sub_data.rename(columns= {'初审公告期号':f'{year}年_申请商标个数'},inplace=True)
    features = features.merge(sub_data,how='left',on='ID')
    #sub_data =gongshang_data_1[gongshang_data_1['商标申请年份']==year].groupby('ID')['国际分类名称_target'].mean().reset_index(drop=False)
    #sub_data.rename(columns= {'国际分类名称_target':f'{year}年_国际分类名称_targetencoder_mean'},inplace=True)
    features = features.merge(sub_data,how='left',on='ID')
    for cl in shangbiao_zhuangtai:
        sub_data = gongshang_data_1[(gongshang_data_1['商标状态']== cl)&(gongshang_data_1['商标申请年份']==year)].groupby('ID')['初审公告期号'].count().reset_index(drop=False)
        sub_data.rename(columns={'初审公告期号':f'{year}年_商标_{cl}_数量'},inplace=True)
        features = features.merge(sub_data,how='left',on='ID')
gongshang_data_2 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{gongshang_name[2]}',index_col=0)
gongshang_data_2['法人变更时间'] = gongshang_data_2['法人变更时间'].fillna('')
gongshang_data_2['法人变更年份'] = gongshang_data_2['法人变更时间'].str.slice(stop=4).replace('', np.nan)
gongshang_data_2['法人变更年份']  = gongshang_data_2['法人变更年份'].astype(float).astype('Int64')
features = gongshang_data_2.groupby('企业名称')['法人变更时间'].count().reset_index(drop=False)
features.rename(columns={'法人变更时间':'法人变更次数'},inplace=True)
for year in range(2018,2024):
    sub_data =gongshang_data_2[gongshang_data_2['法人变更年份']==year].groupby('企业名称')['法人变更时间'].count().reset_index(drop=False)
    sub_data.rename(columns= {'法人变更时间':f'{year}年_法人变更次数'},inplace=True)
    features = features.merge(sub_data,how='left',left_on='企业名称',right_on='企业名称')
features.rename(columns = {'企业名称':'ID'},inplace=True )
gongshang_data_3 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{gongshang_name[3]}',index_col=0)
gongshang_data_3['经营范围变更时间'] = gongshang_data_3['经营范围变更时间'].fillna('')
gongshang_data_3['经营范围变更年份'] = gongshang_data_3['经营范围变更时间'].str.slice(stop=4).replace('', np.nan)
gongshang_data_3['经营范围变更年份']  = gongshang_data_3['经营范围变更年份'].astype(float).astype('Int64')
features = gongshang_data_3.groupby('企业名称')['经营范围变更时间'].count().reset_index(drop=False)
features.rename(columns={'经营范围变更时间':'经营范围变更次数'},inplace=True)
for year in range(2018,2024):
    sub_data =gongshang_data_3[gongshang_data_3['经营范围变更年份']==year].groupby('企业名称')['经营范围变更时间'].count().reset_index(drop=False)
    sub_data.rename(columns= {'经营范围变更时间':f'{year}年_经营范围变更次数'},inplace=True)
    features = features.merge(sub_data,how='left',left_on='企业名称',right_on='企业名称')
features.rename(columns = {'企业名称':'ID'},inplace=True )
gongshang_data_4 = pd.read_excel(f'./数据集/科创企业成长潜力模型/data/{gongshang_name[4]}',index_col=0)
features = gongshang_data_4.groupby("企业名称")['融资金额'].count().reset_index(drop=False)
features.rename(columns ={'融资金额':'融资次数'},inplace=True )
weipilu_data = gongshang_data_4[gongshang_data_4['融资金额']=='未披露'].groupby('企业名称')['融资金额'].count().reset_index(drop=False)
weipilu_data.rename(columns={'融资金额':'未披露次数'},inplace=True)
features = features.merge(weipilu_data,how='left',on='企业名称')
gongshang_data_4['融资金额']= gongshang_data_4['融资金额'].replace('未披露',np.nan)
gongshang_data_4['融资金额'] = gongshang_data_4['融资金额'].str.extract(r'(\d+(?:\.\d+)?)亿')
rongzi_median = gongshang_data_4.groupby('企业名称')['融资金额'].median().reset_index(drop=False)
rongzi_median.rename(columns={'融资金额':'融资金额中位数'},inplace=True)
features = features.merge(rongzi_median,how='left',on='企业名称')
for year in range(2018,2024):
    sub_data =gongshang_data_4[gongshang_data_4['发布时间']==year].groupby('企业名称')['融资金额'].count().reset_index(drop=False)
    sub_data.rename(columns= {'融资金额':f'{year}年_融资次数'},inplace=True)
    features = features.merge(sub_data,how='left',left_on='企业名称',right_on='企业名称')
    sub_data =gongshang_data_4[gongshang_data_4['发布时间']==year].groupby('企业名称')['融资金额'].median().reset_index(drop=False)
    sub_data.rename(columns= {'融资金额':f'{year}年_融资金额中位数'},inplace=True)
    features = features.merge(sub_data,how='left',left_on='企业名称',right_on='企业名称')
features.rename(columns={'企业名称':'ID'},inplace=True)
df =df.merge(features,on='ID',how='left')
df.to('./特征_工商_市场认可_特征.csv')